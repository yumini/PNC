<?php

namespace App\WebBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AspectoClaveRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AspectoClaveRepository extends EntityRepository
{
	public function findArray($id){
        $em=$this->getEntityManager();
        $dql= "SELECT c,cr FROM AppWebBundle:AspectoClave c 
        		join c.criterio cr
             WHERE c.id=:id";
        $query=$em->createQuery($dql)->setParameter('id', $id);
        try {
                return $query->getArrayResult();

        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
    }
	public function findAllById($idCriterio,$idevaluador,$idinscripcion,$isParent,$idTipoEtapa,$isArray){
		$em=$this->getEntityManager();
		if($isParent){
	        $dql   = "SELECT ac,c,e,i,te FROM AppWebBundle:AspectoClave ac
	        		JOIN ac.criterio c
	        		JOIN ac.evaluador e
	        		JOIN ac.inscripcion i
                    JOIN ac.tipoEtapa te
	        		where c.idpadre=:id
	        		AND (e.id=:idevaluador or :idevaluador=0)
	        		AND i.id=:idinscripcion
                    AND te.id=:idtipoetapa";
	    }else{
	    	$dql   = "SELECT ac,c,e,i,te FROM AppWebBundle:AspectoClave ac
	        		JOIN ac.criterio c
	        		JOIN ac.evaluador e
	        		JOIN ac.inscripcion i
                    JOIN ac.tipoEtapa te
	        		where c.id=:id
	        		AND (e.id=:idevaluador or :idevaluador=0)
	        		AND i.id=:idinscripcion
                    AND te.id=:idtipoetapa";
	    }
        $query = $em->createQuery($dql)
        	->setParameter('id', $idCriterio)
        	->setParameter('idevaluador', $idevaluador)
        	->setParameter('idinscripcion', $idinscripcion)
            ->setParameter('idtipoetapa', $idTipoEtapa);
        try {
                if($isArray)
                	return $query->getArrayResult();
                else
                	return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
	}
    public function findAllByEtapa($idinscripcion,$idTipoEtapa,$estado,$isArray){
        $em=$this->getEntityManager();
        $dql   = "SELECT ac FROM AppWebBundle:AspectoClave ac
                    JOIN ac.inscripcion i
                    JOIN ac.tipoEtapa te
                    WHERE   i.id=:idinscripcion
                    AND     te.id=:idtipoetapa
                    AND ac.estado=:estado";
       
        $query = $em->createQuery($dql)
            ->setParameter('idinscripcion', $idinscripcion)
            ->setParameter('idtipoetapa', $idTipoEtapa)
            ->setParameter('estado', $estado);
        try {
                if($isArray)
                    return $query->getArrayResult();
                else
                    return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
    }
	public function findAllByConcursoId($idconcurso,$idevaluador,$idinscripcion,$isArray=false){
		$em=$this->getEntityManager();
	    $dql   = "SELECT ac,cr,e,i FROM AppWebBundle:AspectoClave ac
	        		JOIN ac.criterio cr
	        		JOIN cr.concurso c
	        		JOIN ac.evaluador e
	        		JOIN ac.inscripcion i
	        		WHERE c.id=:id
	        		AND (e.id=:idevaluador or :idevaluador=0)
	        		AND i.id=:idinscripcion";
	    
        $query = $em->createQuery($dql)
        	->setParameter('id', $idconcurso)
        	->setParameter('idevaluador', $idevaluador)
        	->setParameter('idinscripcion', $idinscripcion);
        try {
                if($isArray)
                	return $query->getArrayResult();
                else
                	return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
	}
}
